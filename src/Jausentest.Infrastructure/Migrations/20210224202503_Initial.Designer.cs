// <auto-generated />
using Jausentest.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Jausentest.Infrastructure.Migrations
{
    [DbContext(typeof(JausentestContext))]
    [Migration("20210224202503_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("BeislEntityTagEntity", b =>
                {
                    b.Property<long>("BeislId")
                        .HasColumnType("bigint");

                    b.Property<string>("TagsName")
                        .HasColumnType("varchar(255)");

                    b.HasKey("BeislId", "TagsName");

                    b.HasIndex("TagsName");

                    b.ToTable("BeislTags");
                });

            modelBuilder.Entity("Jausentest.Domain.Entities.BeislEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Owner")
                        .HasColumnType("longtext");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Beisl");
                });

            modelBuilder.Entity("Jausentest.Domain.Entities.TagEntity", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Name");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("BeislEntityTagEntity", b =>
                {
                    b.HasOne("Jausentest.Domain.Entities.BeislEntity", null)
                        .WithMany()
                        .HasForeignKey("BeislId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Jausentest.Domain.Entities.TagEntity", null)
                        .WithMany()
                        .HasForeignKey("TagsName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
